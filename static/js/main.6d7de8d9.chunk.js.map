{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","components/About.js","App.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","onClick","toggleMode","htmlFor","Textform","useState","text","setText","style","backgroundColor","color","value","onChange","e","target","rows","newText","toUpperCase","lowerText","toLocaleLowerCase","document","getElementById","select","execCommand","showAlert","length","trim","replace","split","Alert","alert","role","msg","About","App","setMode","setAlert","message","setTimeout","body","toggleGreen","exact","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6d7de8d9.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Navbar = (props) => {\r\n    return (\r\n        <>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">About</Link>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/\">About</a>\r\n        </li> */}\r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch mx-3 text-${props.mode==='light'?'dark':'light'}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n      </div>\r\n      {/* <div className={`form-check form-switch text-${props.mode==='light'?'green':'light'}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleGreen} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Green Mode</label>\r\n      </div> */}\r\n    </div>\r\n  </div>\r\n</nav>\r\n        </>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string}\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Textform(props) {\r\n  const [text, setText] = useState(\"\");\r\n  const handlecopyClick = () => {\r\n    document.getElementById(\"myBox\").select();\r\n    document.execCommand(\"copy\");\r\n    props.showAlert('Copied to clipboard','success')\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    let clearText = \" \";\r\n    setText(clearText);\r\n    props.showAlert('Text cleared successfully','success')\r\n  };\r\n  const handleUpClick = () => {\r\n    // console.log(\"uppercase was clicked\");\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n  };\r\n\r\n  const handleDownClick = () => {\r\n    let lowerText = text.toLocaleLowerCase();\r\n    setText(lowerText);\r\n  };\r\n\r\n  const handleOnchange = (e) => {\r\n    // console.log(\"on change clicked\");\r\n    setText(e.target.value);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"mb-3\">\r\n        <h1\r\n          className={`text-center my-3 text-${\r\n            props.mode === \"light\" ? \"dark\" : \"light\"\r\n          }`}\r\n        >\r\n          TEXT ANALYZER\r\n        </h1>\r\n        <textarea\r\n          className=\"form-control\"\r\n          style={{\r\n            backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n            color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n          }}\r\n          value={text}\r\n          onChange={handleOnchange}\r\n          id=\"myBox\"\r\n          rows=\"8\"\r\n        ></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary\" onClick={handleUpClick}>\r\n        Convert to upperpcase\r\n      </button>\r\n      <button className=\"btn btn-info m-2\" onClick={handleDownClick}>\r\n        Convert to lowercase\r\n      </button>\r\n      <button className=\"btn btn-info m-2\" onClick={handlecopyClick}>\r\n        Copy to Clipboard\r\n      </button>\r\n      <button className=\"btn btn-danger m-2\" onClick={handleClearClick}>\r\n        Clear text\r\n      </button>\r\n\r\n      <div>\r\n        <h1\r\n          className={`mt-4 text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}\r\n        >\r\n          Text Summary\r\n        </h1>\r\n        <h4 className={`text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>\r\n          Characters(Including space): {text.length}\r\n        </h4>\r\n        <h4 className={`text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>\r\n          Words: {text.trim().replace(/  +/g, \" \").split(\" \").length}\r\n        </h4>\r\n        <h4 className={`text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>\r\n          No. of sentences: {text.split(\".\").length - 1}\r\n        </h4>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nconst Alert = (props) => {\r\n    return (\r\n\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{props.alert.msg}</strong>\r\n            </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default Alert;\r\n","import React from 'react'\r\n\r\nconst About = () => {\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <h1>About us</h1>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nexport default About;","import React,{useState} from 'react'\nimport Navbar from './components/Navbar'\nimport Textform from './components/Textform'\nimport Alert from './components/Alert'\nimport About from './components/About'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\n\nexport const App = () => {\n  const [mode,setMode]=useState('light');\n\n  const [alert,setAlert]=useState(null);\n\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n  const toggleGreen=()=>{\n    if(mode==='light'){\n      setMode('dark')\n      document.body.style.backgroundColor = '#245501';\n      showAlert('Green mode enabled','success')\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light mode enabled','success')\n    }\n  }\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark')\n      document.body.style.backgroundColor = '#1c1c1c';\n      showAlert('Dark mode enabled','success')\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light mode enabled','success')\n    }\n  }\n  return (\n    <>\n    <Router>\n    <Navbar title=\"Text Analyzer\" mode={mode} toggleMode={toggleMode} toggleGreen={toggleGreen}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\">\n    <Textform showAlert={showAlert} mode={mode}/>\n          </Route>\n        </Switch>\n    </div>\n    </Router>\n    </>\n  )\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}